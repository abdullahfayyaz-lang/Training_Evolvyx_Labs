TO install run the following commad 
pip install django djangorestframework 
or add thr following in the requirement.txt
djangorestframework==3.15.2


Also make sure to add the following in installed app list

INSTALLED_APPS = [
    # Third-party
    'rest_framework',]

then create a model 

example:
from django.db import models

class Student(models.Model):
    name = models.CharField(max_length=100)
    age = models.IntegerField()
    email = models.EmailField(unique=True)

    def __str__(self):
        return self.name

then run the migrationsÂ¶ and then migrate the changes


then add serializers to the models so the the data can be easily accessed in json or other formate


Serializers
Expanding the usefulness of the serializers is something that we would like to address. However, it's not a trivial problem, and it will take some serious design work.
Serializers allow complex data such as querysets and model instances to be converted to native Python datatypes that can then be easily rendered into JSON, XML or other content types. Serializers also provide deserialization, allowing parsed data to be converted back into complex types, after first validating the incoming data.

The serializers in REST framework work very similarly to Django's Form and ModelForm classes. We provide a Serializer class which gives you a powerful, generic way to control the output of your responses, as well as a ModelSerializer class which provides a useful shortcut for creating serializers that deal with model instances and querysets.